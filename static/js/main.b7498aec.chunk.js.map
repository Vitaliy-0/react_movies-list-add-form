{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","newFilm","isValid","urlValidation","link","test","onChange","event","target","name","value","trim","length","setState","clearForm","onBlur","this","onSubmit","preventDefault","props","onAdd","type","placeholder","style","borderColor","cols","rows","disabled","Component","App","moviesFromServer","addMovie","film","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7498aec.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { Component } from 'react';\n\nimport './NewMovie.scss';\n\ntype Validation = {\n  imgUrl: boolean;\n  imdbUrl: boolean;\n};\n\ntype Props = {\n  onAdd: (newFilm: Movie) => void;\n};\ntype State = {\n  newFilm: Movie;\n  isValid: Validation;\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = {\n    newFilm: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    isValid: {\n      imgUrl: false,\n      imdbUrl: false,\n    },\n  };\n\n  urlValidation = (link: string) => {\n    const regex = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\n    return regex.test(link);\n  };\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>\n  | React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { name, value } = event.target;\n\n    if (value.trim() === '' && value.length !== 0) {\n      return;\n    }\n\n    this.setState(state => ({\n      newFilm: {\n        ...state.newFilm,\n        [name]: value,\n      },\n    }));\n  };\n\n  clearForm = () => {\n    this.setState({\n      newFilm: {\n        title: '',\n        description: '',\n        imgUrl: '',\n        imdbUrl: '',\n        imdbId: '',\n      },\n    });\n  };\n\n  onBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'imgUrl':\n      case 'imdbUrl':\n        this.setState(state => ({\n          isValid: {\n            ...state.isValid,\n            [name]: this.urlValidation(value),\n          },\n        }));\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state.newFilm;\n    const { isValid } = this.state;\n\n    return (\n      <form onSubmit={(event) => {\n        event.preventDefault();\n\n        this.props.onAdd(this.state.newFilm);\n        this.clearForm();\n      }}\n      >\n        <p className=\"form__helper\">* - required field</p>\n        <label>\n          *Title:\n          <input\n            className=\"form__input\"\n            value={title}\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Title of the movie\"\n            onChange={this.onChange}\n            style={{ borderColor: (title.length > 0) ? '' : 'red' }}\n          />\n        </label>\n\n        <label>\n          Description:\n          <textarea\n            className=\"form__textarea\"\n            cols={40}\n            rows={5}\n            value={description}\n            name=\"description\"\n            placeholder=\"Description of the movie\"\n            onChange={this.onChange}\n          />\n        </label>\n\n        <label>\n          *Image URL adress:\n          <input\n            className=\"form__input\"\n            value={imgUrl}\n            name=\"imgUrl\"\n            type=\"text\"\n            placeholder=\"https://...\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            style={{ borderColor: (!isValid.imgUrl) ? 'red' : '' }}\n          />\n        </label>\n        {!isValid.imgUrl && (\n          <p className=\"form__input--invalid\">Value is invalid</p>\n        )}\n\n        <label>\n          *Film URL adress:\n          <input\n            className=\"form__input\"\n            value={imdbUrl}\n            name=\"imdbUrl\"\n            type=\"text\"\n            placeholder=\"https://...\"\n            onChange={this.onChange}\n            onBlur={this.onBlur}\n            style={{ borderColor: (!isValid.imdbUrl) ? 'red' : '' }}\n          />\n        </label>\n        {!isValid.imdbUrl && (\n          <p className=\"form__input--invalid\">Value is invalid</p>\n        )}\n\n        <label>\n          *Film id:\n          <input\n            className=\"form__input\"\n            value={imdbId}\n            name=\"imdbId\"\n            type=\"text\"\n            placeholder=\"Enter a new ID\"\n            onChange={this.onChange}\n            style={{ borderColor: (imdbId.length === 0) ? 'red' : '' }}\n          />\n        </label>\n\n        <button\n          className=\"button\"\n          type=\"submit\"\n          disabled={\n            !(title && isValid.imgUrl && isValid.imdbUrl && imdbId)\n          }\n        >\n          Add film\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (film: Movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, film],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}